---
{{ if .Values.broker.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-service: broker
    kind: controller
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-service: broker
  template:
    metadata:
      labels:
        k8s-service: broker
    spec:
      terminationGracePeriodSeconds: 1200
      containers:
        - name: broker
          image: "{{ .Values.broker.image.repository }}:{{ .Values.broker.image.tag }}"
          command:
            [
              "metal-broker",
              "run",
              "--config",
              "/etc/broker/config.yaml",
              "--enable-pprof",
              "--log-level",
              "debug",
              "--fault-injection",
              "--facility-code",
              "{{ .Values.broker.env.facility }}",
            ]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/broker
            - name: nats-creds-volume
              mountPath: /etc/nats
              readOnly: true
          env:
            - name: METAL_BROKER_NATS_URL
              value: "{{ .Values.broker.env.endpoints.nats.url }}"
            - name: METAL_BROKER_NATS_CONNECT_TIMEOUT
              value: "{{ .Values.broker.env.endpoints.nats.timeout }}"
            - name: METAL_BROKER_NATS_CREDS_FILE
              value: /etc/nats/nats.creds
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "{{ .Values.broker.env.endpoints.otel.url }}"
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: "{{ not .Values.broker.env.endpoints.otel.authenticate }}"
          securityContext:
            capabilities:
              drop:
                - NET_RAW
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            limits:
              cpu: 200m
              memory: 200M
            requests:
              cpu: 200m
              memory: 200M
          ports:
            - name: metrics-port
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 5
      volumes:
        - name: config-volume
          configMap:
            name: broker-config
        - name: nats-creds-volume
          secret:
            secretName: broker-secrets
            items:
              - key: broker-nats-creds
                path: nats.creds
      restartPolicy: Always
{{ end }}
