apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-service: conditions-api
    kind: controller
  name: conditions-api
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-service: conditions-api
  template:
    metadata:
      labels:
        k8s-service: conditions-api
    spec:
      containers:
        - image: {{ .Values.conditionorc.image.repository.url }}/conditionorc:{{ .Values.conditionorc.image.repository.tag }}
          imagePullPolicy: {{ $.Values.conditionorc.image.pullPolicy }}
          name: conditions-api
          args:
            - server
            - "--oidc=false"
            - "--config"
            - "/etc/conditionorc/config.yaml"
          ports:
            - containerPort: 9001
          volumeMounts:
            - name: config-volume
              mountPath: /etc/conditionorc/
            - name: nats-creds-volume
              mountPath: /etc/nats
              readOnly: true
          env:
            - name: CONDITIONORC_OIDC_ENABLED
              value: "{{ .Values.conditionorc.env.endpoints.conditionorc.authenticate }}"
            - name: CONDITIONORC_FLEETDB_ENABLE_SERVER_ENROLL
              value: "{{ .Values.conditionorc.enable_server_enroll }}"
            - name: CONDITIONORC_NATS_URL
              value: "{{ .Values.conditionorc.env.endpoints.nats.url }}"
            - name: CONDITIONORC_NATS_CONNECT_TIMEOUT
              value: "{{ .Values.conditionorc.env.endpoints.nats.timeout }}"
            - name: CONDITIONORC_NATS_CONSUMER_NAME
              value: "conditionorc"
            - name: CONDITIONORC_NATS_CONSUMER_SUBSCRIBESUBJECTS
              value: "com.hollow.sh.controllers.responses.>"
            - name: CONDITIONORC_NATS_CONSUMER_FILTERSUBJECT
              value: "com.hollow.sh.controllers.responses.>"
            - name: CONDITIONORC_NATS_PUBLISHERSUBJECTPREFIX
              value: "com.hollow.sh.controllers.commands"
            - name: CONDITIONORC_SERVERSERVICE_ENDPOINT
              value: "{{ .Values.conditionorc.env.endpoints.fleetdb.url }}"
            - name: CONDITIONORC_SERVERSERVICE_DISABLE_OAUTH
              value: "{{ not .Values.conditionorc.env.endpoints.fleetdb.authenticate }}"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "{{ .Values.conditionorc.env.endpoints.otel.url }}"
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: "{{ not .Values.conditionorc.env.endpoints.otel.authenticate }}"
            - name: CONDITIONORC_SERVERSERVICE_OIDC_AUDIENCE_ENDPOINT
              value: "{{ .Values.conditionorc.env.endpoints.fleetdb.oidc_audience_url }}"
            - name: CONDITIONORC_SERVERSERVICE_OIDC_ISSUER_ENDPOINT
              value: "{{ .Values.conditionorc.env.endpoints.fleetdb.oidc_issuer_url }}"
            - name: CONDITIONORC_SERVERSERVICE_OIDC_CLIENT_SCOPES
              value: "{{ .Values.conditionorc.env.endpoints.fleetdb.oidc_client_scopes }}"
            - name: CONDITIONORC_SERVERSERVICE_OIDC_CLIENT_ID
              value: "{{ .Values.conditionorc.env.endpoints.fleetdb.oidc_client_id }}"
              #- name: CONDITIONORC_SERVERSERVICE_OIDC_CLIENT_SECRET
              #  valueFrom:
              #    secretKeyRef:
              #      name: conditionorc-secrets
              #      key: serverservice-oidc-client-secret
            - name: CONDITIONORC_NATS_CREDS_FILE
              value: /etc/nats/nats.creds
          securityContext:
            capabilities:
              drop:
                - NET_RAW
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          resources:
            limits:
              cpu: 100m
              memory: 100M
            requests:
              cpu: 100m
              memory: 100M
          ports:
            - name: metrics-port
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 60
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics-port
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        - name: config-volume
          configMap:
            name: condition-orchestrator-config
        - name: nats-creds-volume
          secret:
            secretName: conditionorc-secrets
            items:
              - key: conditionorc-nats-creds
                path: nats.creds
      restartPolicy: Always
